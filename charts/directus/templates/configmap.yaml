apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "directus.fullname" . }}-configmap
  labels:
    app.kubernetes.io/name: {{ include "directus.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "directus.chart" . }}
data:
  # Database configuration (only static values - valueFrom handled in deployment)
  {{- if not (include "directus.isValueFrom" .Values.database.client) }}
  DB_CLIENT: {{ include "directus.getValue" .Values.database.client | default .Values.databaseEngine | quote }}
  {{- end }}
  
  {{- if not (include "directus.isValueFrom" .Values.database.host) }}
  DB_HOST: {{ include "directus.dbHost" . | quote }}
  {{- end }}
  
  {{- if not (include "directus.isValueFrom" .Values.database.port) }}
  DB_PORT: {{ include "directus.dbPort" . | quote }}
  {{- end }}
  
  {{- if not (include "directus.isValueFrom" .Values.database.name) }}
  DB_DATABASE: {{ include "directus.dbDatabase" . | quote }}
  {{- end }}
  
  {{- if not (include "directus.isValueFrom" .Values.database.username) }}
  DB_USER: {{ include "directus.dbUser" . | quote }}
  {{- end }}

  # Admin configuration
  {{- if not (include "directus.isValueFrom" .Values.admin.email) }}
  ADMIN_EMAIL: {{ include "directus.getValue" .Values.admin.email | default .Values.adminEmail | quote }}
  {{- end }}

  # Redis configuration
  {{- if not (include "directus.isValueFrom" .Values.directusRedis.enabled) }}
  REDIS_ENABLED: {{ include "directus.getValue" .Values.directusRedis.enabled | quote }}
  {{- end }}
  
  {{- if include "directus.getValue" .Values.directusRedis.enabled }}
  {{- if not (include "directus.isValueFrom" .Values.directusRedis.host) }}
  REDIS_HOST: {{ include "directus.redisHost" . | quote }}
  {{- end }}
  
  {{- if not (include "directus.isValueFrom" .Values.directusRedis.port) }}
  REDIS_PORT: {{ include "directus.getValue" .Values.directusRedis.port | quote }}
  {{- end }}
  
  {{- if not (include "directus.isValueFrom" .Values.directusRedis.username) }}
  REDIS_USERNAME: {{ include "directus.getValue" .Values.directusRedis.username | quote }}
  {{- end }}
  {{- end }}

  # Public URL configuration
  {{- if .Values.ingress.enabled }}
  {{- if not (include "directus.isValueFrom" .Values.application.publicUrl) }}
  {{- $publicUrl := include "directus.getValue" .Values.application.publicUrl -}}
  {{- if not $publicUrl }}
  PUBLIC_URL: "http{{ if .Values.ingress.enableTLS }}s{{ end }}://{{(index .Values.ingress.hosts 0).host }}{{(index (index .Values.ingress.hosts 0).paths 0).path }}"
  {{- else }}
  PUBLIC_URL: {{ $publicUrl | quote }}
  {{- end }}
  {{- end }}
  {{- end }}